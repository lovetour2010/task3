Keywords（关键字）
* del――用于list列表操作，删除一个或者连续几个元素。
  示例程序：
  >>>a=[-1,3,'aa',85]
  >>>a
  [-1,3,'aa',85]
  >>>del a[0] #删除第0个元素
  >>>a
  [3,'aa',85]
  >>>del a[0:2] #删除从0个元素开始，到第2个元素为止的元素。包括头不包括尾。
  [85]
  >>>del a #删除整个list
  >>>a
  报错
  
* global――将变量定义为全局变量。可以通过定义为全局变量，实现在函数内部使用变量。
  示例程序：
  >>> def func():
          global x
		  print 'x is ',x
		  x=2
		  print 'Change local x to',x
  >>>x=50
  >>>func()
  x is 50
  Change local x to 2
  
 * assert――断言。用来声明某个条件是真的，当assert语句失败的时候，会引发AssertionError。
   示例程序：
   >>>mylist=['item']
   >>>assert len(mylist)>=1
   >>>mylist.pop() #pop(),默认弹出最后一个元素(出栈操作）。
   'item'
   >>>assert len(mylist)>=1
   Traceback (most recent call last):
     File"<stdin>", line 1, in <module>
   AssertionError
   
 * pass――语句什么也不做，一般作为占位符或者创建占位程序，pass语句不会执行任何操作
   示例程序：定义一个空函数
   >>>def nullfunc():
   ...    pass
   ...
   >>>nullfunc()
   >>>
   
  * exec――用来执行储存在字符串或文件中的Python语句。例如，我们可以在运行时生成一个包含Python代码的字符串，然后使用exec语句执行这些语句。
    示例程序：
	>>>exec 'print "Hello World"'
	Hello World
	
  * is――等于。和"=="是有区别的。Python的对象包含三要素：id、type、value,其中id用来唯一标识一个对象，type标识类型，valud是对象的值。is是通过id来判断a对象是否是b对象，==是通过value来判断的。
    示例程序：
	>>>a=1
	>>>b=1.0
	>>>a is b
	False
	>>>a==b
	True
	>>>id(a)
	30334072L
	>>>id(b)
	30395736L
	
  * lambda――匿名函数，即没有具体的名称。它允许你快速定义单行的最小函数。
    示例程序：
	>>>g=lambda x:x*2
	>>>g(3)
	6
	>>>(lambda x:x*2)(3)
	6
	
数据类型
  * True 
  * False
  * None
  * strings   "Hello World" 'Hello'
  * numbers   1  209  
  * floats    4.0  73.9
  * lists     [1,2,3]